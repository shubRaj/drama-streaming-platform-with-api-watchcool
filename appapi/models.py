from django.db import models
from django.utils import timezone
DOWNLOAD_OPTIONS = (
    ("Free","Free"),
    ("WithAdsUnlock","WithAdsUnlock"),
    ("PremiumOnly","PremiumOnly")
)
def default_tmdb_lang():
    return {"english_name":"English","iso_639_1":"en","name":"English"}
class Configuration(models.Model):
    app_name = models.CharField(max_length=40)
    tmdb_api_key = models.CharField(max_length=191,default="9f002d3cbd8d807b5af7339bf13b63fd")
    tmdb_lang = models.JSONField(default=default_tmdb_lang)
    app_url_android = models.URLField(null=True,blank=True)
    autosubstitles = models.BooleanField(default=False)
    livetv = models.BooleanField(default=False)
    ads_player = models.BooleanField(default=False)
    anime = models.BooleanField(default=False)
    facebook_show_interstitial = models.PositiveSmallIntegerField(default=0)
    ad_show_interstitial = models.PositiveSmallIntegerField(default=0)
    ad_interstitial = models.PositiveSmallIntegerField(default=0)
    ad_unit_id_interstitial = models.CharField(max_length=191,null=True,blank=True)
    ad_banner = models.BooleanField(default=False)
    ad_unit_id_banner = models.CharField(max_length=191,null=True,blank=True)
    ad_face_audience_interstitial = models.PositiveSmallIntegerField(default=0)
    ad_face_audience_banner = models.PositiveIntegerField(default=0)
    ad_unit_id_facebook_interstitial_audience=models.CharField(max_length=191,null=True,blank=True)
    ad_unit_id_facebook_banner_audience = models.CharField(max_length=191,null=True,blank=True)
    privacy_policy = models.TextField(null=True,blank=True)
    latestVersion = models.CharField(max_length=4,blank=True,null=True)
    update_title = models.CharField(max_length=40,blank=True,null=True)
    releaseNotes = models.TextField(null=True,blank=True)
    enable_custom_message = models.BooleanField(default=False)
    custom_message = models.TextField(null=True,blank=True)
    url = models.URLField(null=True,blank=True)
    imdb_cover_path = models.URLField(default="http://image.tmdb.org/t/p/w500")
    paypal_client_id = models.CharField(max_length=191,null=True,blank=True)
    paypal_amount = models.CharField(max_length=191,null=True,blank=True)
    stripe_publishable_key = models.CharField(max_length=191,null=True,blank=True)
    stripe_secret_key = models.CharField(max_length=191,null=True,blank=True)
    featured_home_numbers = models.IntegerField(default=5)
    startapp_id = models.CharField(max_length=191,null=True,blank=True)
    ad_unit_id_rewarded = models.CharField(max_length=191,null=True,blank=True)
    ad_unit_id_facebook_rewarded = models.CharField(max_length=191,null=True,blank=True)
    ad_unit_id_appodeal_rewarded = models.CharField(max_length=191,null=True,blank=True)
    unity_game_id = models.CharField(max_length=191,null=True,blank=True)
    default_network = models.CharField(max_length=191,null=True,blank=True)
    wach_ads_to_unlock = models.BooleanField(default=False)
    aws_s3_storage = models.BooleanField(default=False)
    aws_access_key_id = models.CharField(max_length=191,null=True,blank=True)
    aws_secret_access_key = models.CharField(max_length=191,null=True,blank=True)
    aws_default_region = models.CharField(max_length=191,null=True,blank=True)
    aws_bucket = models.CharField(max_length=191,null=True,blank=True)
    wasabi_storage = models.BooleanField(default=False)
    wasabi_access_key_id = models.CharField(max_length=191,null=True,blank=True)
    wasabi_secret_access_key = models.CharField(max_length=191,null=True,blank=True)
    wasabi_default_region = models.CharField(max_length=191,null=True,blank=True)
    wasabi_bucket = models.CharField(max_length=191,null=True,blank=True)
    default_media_placeholder_path = models.CharField(max_length=191,null=True,blank=True)
    next_episode_timer = models.PositiveSmallIntegerField(default=10)
    facebook_url = models.URLField(null=True,blank=True)
    twitter_url = models.URLField(null=True,blank=True)
    instagram_url =models.URLField(null=True,blank=True)
    telegram_url = models.URLField(null=True,blank=True)
    ad_unit_id_native = models.CharField(max_length=191,null=True,blank=True)
    default_payment = models.CharField(max_length=191,null=True,blank=True)
    paypal_currency = models.CharField(max_length=191,null=True,blank=True)
    appodeal_show_interstitial = models.BooleanField(default=False)
    ad_unit_id_native_enable = models.BooleanField(default=False)
    appodeal_banner = models.BooleanField(default=False)
    appodeal_intersitial = models.BooleanField(default=False)
    # media_placehoder_path = models.CharField(max_length=100,null=True,blank=True)
    server_dialog_selection = models.BooleanField(default=False)
    download_premium_only = models.BooleanField(default=False)
    default_network_player = models.CharField(max_length=191,null=True,blank=True)
    default_downloads_options = models.CharField(max_length=13,choices=DOWNLOAD_OPTIONS,default="Free")
    wach_ads_to_unlock_player = models.BooleanField(default=False)
    enable_custom_banner = models.BooleanField(default=False)
    custom_banner_image = models.ImageField(upload_to="custom_banner",null=True,blank=True)
    custom_banner_image_link = models.URLField(null=True,blank=True)
    maintenance_mode = models.BooleanField(default=False)
    mantenance_mode_message = models.TextField(null=True,blank=True)
    splash_image = models.URLField(null=True,blank=True)
    allow_adm = models.BooleanField(default=False) 
    default_youtube_quality  = models.CharField(null=True,blank=True,max_length=20)
    enable_previews = models.BooleanField(default=False)
    enable_pinned = models.BooleanField(default=False)
    startapp_banner = models.BooleanField(default=False)
    startapp_interstitial = models.BooleanField(default=False)
    enable_vlc = models.BooleanField(default=False)
    resume_offline  = models.BooleanField(default=True)
    user_agent =  models.CharField(max_length=500,blank=True,null=True)
    unityads_banner = models.BooleanField(default=False)
    unityads_interstitial = models.BooleanField(default=False)
    streaming = models.BooleanField(default=False)
    enable_banner_bottom = models.BooleanField(default=False)
    ad_face_audience_native = models.BooleanField(default=False)
    enable_upcoming = models.BooleanField(default=False)
    ad_unit_id_facebook_native_audience = models.CharField(max_length=191,null=True,blank=True)
    created_at = models.DateTimeField(default=timezone.now,editable=False)
    updated_at = models.DateTimeField(default=timezone.now)
    enable_download = models.BooleanField(default=False)
    notification_separated = models.BooleanField(default=False)
    default_cast_option = models.CharField(max_length=191,null=True,blank=True)
    default_trailer_default = models.CharField(max_length=191,null=True,blank=True)
    hxfile_api_key = models.CharField(max_length=191,null=True,blank=True)
    email_verify = models.BooleanField(default=False)
    force_login = models.BooleanField(default=False)
    favoriteonline = models.BooleanField(default=False)
    separate_download = models.BooleanField(default=False)
    vpn = models.BooleanField(default=False)
    notification_style = models.BooleanField(default=False)
    force_update = models.BooleanField(default=False)
    appnext_banner = models.BooleanField(default=False)
    appnext_interstitial = models.BooleanField(default=False)
    appnext_placementid = models.CharField(max_length=191,null=True,blank=True)
    live_multi_servers = models.BooleanField(default=False)
    suggest_auth = models.BooleanField(default=False)
    network = models.BooleanField(default=False)
    enable_webview = models.BooleanField(default=False)
    webview_link = models.CharField(max_length=191,null=True,blank=True)
    vungle_banner = models.BooleanField(default=False)
    vungle_interstitial = models.BooleanField(default=False)
    vungle_appid = models.CharField(max_length=191,null=True,blank=True)
    vungle_interstitial_placement_name = models.CharField(max_length=191,null=True,blank=True)
    vungle_banner_placment_name = models.CharField(max_length=191,null=True,blank=True)
    vungle_reward_placement_name = models.CharField(max_length=191,null=True,blank=True)
    flag_secure = models.BooleanField(default=True)
    appnext_interstitial_show = models.IntegerField(blank=True,null=True)
    vungle_interstitial_show = models.IntegerField(blank=True,null=True)
    ironsource_banner = models.BooleanField(default=False)
    ironsource_interstitial = models.BooleanField(default=False)
    ironsource_app_key = models.CharField(max_length=191,null=True,blank=True)
    ironsource_interstitial_placement_name = models.CharField(max_length=191,null=True,blank=True)
    ironsource_banner_placement_name = models.CharField(max_length=191,null=True,blank=True)
    ironsource_reward_placement_name = models.CharField(max_length=191,null=True,blank=True)
    unity_show = models.IntegerField(blank=True,null=True)
    root_detection = models.BooleanField(default=True)
    applovin_banner = models.BooleanField(default=False)
    applovin_interstitial = models.BooleanField(default=False)
    applovin_banner_unitid = models.CharField(max_length=191,null=True,blank=True)
    applovin_interstitial_unitid = models.CharField(max_length=191,null=True,blank=True)
    applovin_reward_unitid = models.CharField(max_length=191,null=True,blank=True)
    applovin_interstital_show = models.BooleanField(default=False)
    ironsource_interstitial_show = models.IntegerField(null=True,blank=True)
    unity_banner_placement_id = models.CharField(max_length=191,null=True,blank=True)
    unity_intersitial_placement_id = models.CharField(max_length=191,null=True,blank=True)
    unity_reward_placement_id = models.CharField(max_length=191,null=True,blank=True)
    force_password_access = models.BooleanField(default=False)
    password = models.CharField(max_length=191,null=True,blank=True)
    force_inappupdate = models.BooleanField(default=False)
    default_layout_networks = models.CharField(max_length=191,null=True,blank=True)
    reset_password_message = models.CharField(max_length=600,null=True,blank=True)
    def save(self,*args,**kwargs):
        if self.id:
            self.updated_at = timezone.now()
            self.id = 1
        return super().save(*args,**kwargs)
    class Meta:
        verbose_name_plural="Android Configuration"